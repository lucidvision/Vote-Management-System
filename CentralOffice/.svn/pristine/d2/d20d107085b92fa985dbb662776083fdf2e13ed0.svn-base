package GUI;
import ManageRepository.RepositoryManagement;
import ManageUsers.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;


public class LoginWindow extends JFrame implements ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int initialWidth = 300;
	private int initialHeight = 200;
	private UserManagement UserManager;
	private RepositoryManagement RepManager;
	
	JButton submit; 
	JPanel panel;
	JLabel label1,label2,label3;
	JTextField  userName,password;
	String roles[] = {"System Administer","Electoral Oficial","Returning Officer","Reporter"};
	JComboBox roleSlection;
	public LoginWindow(UserManagement UM, RepositoryManagement RM) {
		//Initial the frame.
		UserManager = UM;
		RepManager = RM;
		this.setLocationRelativeTo(null);
		this.setSize(initialWidth, initialHeight);
		this.setResizable(false);
		this.setTitle("Login");
		this.setVisible(true);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		label1 = new JLabel();
		label1.setText("Username:");
		userName = new JTextField(15);
		
		label2 = new JLabel();
		label2.setText("Password:");
		password = new JPasswordField(15);
		
		label3 = new JLabel();
		label3.setText("SlectRole:");
		roleSlection = new JComboBox(roles);
		
		
		submit=new JButton("Submit");

		panel=new JPanel();
		panel.add(label1,BorderLayout.WEST);
		panel.add(userName,BorderLayout.EAST);
		panel.add(label2,BorderLayout.WEST);
		panel.add(password,BorderLayout.EAST);
		panel.add(label3,BorderLayout.SOUTH);
		panel.add(roleSlection,BorderLayout.SOUTH);
		panel.add(submit,BorderLayout.SOUTH);
		add(panel,BorderLayout.CENTER);
		
		//ACTION

		submit.addActionListener(this);
		this.setVisible(true);
	}
	
	public void actionPerformed (ActionEvent e)
	{   
		int role = -1;
		if ("System Administer".equals((String) roleSlection.getSelectedItem())) role = 0;
		if ("Electoral Oficial".equals((String) roleSlection.getSelectedItem())) role = 1;
		if ("Returning Officer".equals((String) roleSlection.getSelectedItem())) role = 2;
		if ("Reporter".equals((String) roleSlection.getSelectedItem())) role = 3;
		if(UserManager.logon(userName.getText(),password.getText(),role)) {
			if(role == 1){
				new EOMainMenu();
			}
			if(role == 2){
				new ROGUI(UserManager , RepManager);
			}
			this.dispose();
		} else {
			String[] err = {"message"};
			elecUser user = UserManager.getUser(userName.getText());
			if(user != null){
				if(!password.getText().equals(user.getPass())){
					String [] err1 = { "Unable to logon" , "Password did not match stored password" };
					err = err1;
				} else if(!user.getRole()[role]) {
					String [] err1 = { "Unable to logon" , "You do not have permission to access requested role." };
					err = err1;
				} else if(user.getUse() > 0){
					String [] err1 = { "Unable to logon" , "You are already logged on to another computer." };
					err = err1;
				}
			} else {
				String [] err1 = { "Unable to logon" , "Logon not found." };
				err = err1;
			}
			new Error(err);
		}
	}

}
